// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SunBattery_Api;

#nullable disable

namespace SunBattery_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250201174840_Add_InfoTime")]
    partial class Add_InfoTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SunBattery_Api.Entities.InfoTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("InfoTimes");
                });

            modelBuilder.Entity("SunBattery_Api.Models.ProtocolData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ACOutputActivePower")
                        .HasColumnType("longtext");

                    b.Property<string>("ACOutputApparentPower")
                        .HasColumnType("longtext");

                    b.Property<string>("ACOutputFrequency")
                        .HasColumnType("longtext");

                    b.Property<string>("ACOutputVoltage")
                        .HasColumnType("longtext");

                    b.Property<string>("BUSVoltage")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryCapacity")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryChargingCurrent")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryDischargeCurrent")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryVoltage")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryVoltageFromSCC")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryVoltageOffsetForFansOn")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceStatus2")
                        .HasColumnType("longtext");

                    b.Property<string>("EEPROMVersion")
                        .HasColumnType("longtext");

                    b.Property<string>("GridFrequency")
                        .HasColumnType("longtext");

                    b.Property<string>("GridVoltage")
                        .HasColumnType("longtext");

                    b.Property<string>("InverterHeatSinkTemperature")
                        .HasColumnType("longtext");

                    b.Property<string>("OutputLoadPercent")
                        .HasColumnType("longtext");

                    b.Property<string>("PVChargingPower")
                        .HasColumnType("longtext");

                    b.Property<string>("PVInputCurrent")
                        .HasColumnType("longtext");

                    b.Property<string>("PVInputVoltage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProtocolDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
